{"version":3,"sources":["components/Textform.js","components/Navbar.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Textform","props","_useState","useState","_useState2","_slicedToArray","text","setText","React","createElement","Fragment","className","style","color","mode","heading","id","onChange","event","target","value","rows","backgroundColor","border","disabled","length","onClick","newtext","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","filter","element","Navbar","concat","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","aria-current","Home","enableDark","change","htmlFor","Text","Alert","height","alert","role","message","App","setmode","_useState3","_useState4","setalert","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.7fab87e4.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\n\r\nexport default function Textform(props) {\r\n    const handleclick = ()=>{\r\n        const newtext = text.toUpperCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Uppercase Successfull!\", \"success\");\r\n    }\r\n    const handleloclick = ()=>{\r\n        const newtext = text.toLowerCase();\r\n        setText(newtext);\r\n        props.showAlert(\"Lowercase Successfull!\", \"success\");\r\n    }\r\n    const handleOnchange = (event)=>{\r\n        setText(event.target.value);\r\n\r\n    }\r\n    const clear = (event)=>{\r\n        setText(\" \");\r\n        props.showAlert(\" text cleared!\", \"success\");\r\n\r\n    }\r\n    const copy = ()=>{\r\n        var text = document.getElementById(\"exampleFormControlTextarea1\");\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Text Copied\", \"success\");\r\n    }\r\n\r\n        const[text, setText] = useState(\"\");\r\n        \r\n  return (\r\n    <>\r\n    <div className='container'>\r\n        <h1 style={{color:props.mode==='light'?'black':'white'}}>{props.heading}</h1>\r\n       \r\n<div className=\"mb-3\">\r\n  \r\n  <textarea  className=\"form-control\" id=\"exampleFormControlTextarea1\" onChange = {handleOnchange} value={text} rows=\"8\" style={{color:props.mode==='light'?'black':'white',backgroundColor:props.mode==='light'?'white':'grey', border:props.mode==='dark'?'2px solid white':'2px solid black'}}></textarea>\r\n</div>\r\n    <button disabled={text.length===0} className = \"btn btn-primary\" onClick = {handleclick}> Uppercase </button>\r\n    <button disabled={text.length===0} className = \"btn btn-success mx-3\" onClick = {handleloclick}> Lowercase The Text </button>\r\n    <button disabled={text.length===0} className = \"btn btn-dark mx-1\" onClick = {clear}> Clear </button>\r\n    <button disabled={text.length===0} className = \"btn btn-primary mx-1\" onClick = {copy}> Copy Text </button>\r\n        \r\n    </div>\r\n    <div className=\"container\" style={{color:props.mode==='light'?'black':'white'}}> \r\n        <h3 className='my-3'> Words Counter</h3>\r\n        \r\n        <p> you've wrote {text.split(\" \").filter((element)=>{return element.length!==0}).length} words and {text.length} character</p>\r\n        <h2>Preview</h2>\r\n        <p> {text.length>0?text:\"Nothing to preview\"}</p>\r\n    </div>\r\n     \r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function Navbar(props) {\r\n  \r\n  return (\r\n    <nav className={`navbar navbar-expand-lg bg-${props.mode} navbar-${props.mode} text-light\"`}>\r\n  <div className=\"container-fluid text-light\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">{props.Home}</a>\r\n        </li>\r\n        \r\n        \r\n        \r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link disabled\" href=\"/\">Disabled</a>\r\n        </li> */}\r\n      </ul>\r\n              <div className={`form-check form-switch text-${props.mode==='dark'?'light':'dark'}`}>\r\n          <input type=\"checkbox\" className =\"form-check-input\" id=\"flexSwitchCheckDefault\" onClick={props.enableDark}/>\r\n          <label className=\"form-check-label\" onClick={props.change} htmlFor=\"flexSwitchCheckDefault\">{props.Text}</label>\r\n          \r\n        </div>\r\n        \r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n Navbar.propTypes = {\r\n    Home: PropTypes.string\r\n }","import React from 'react'\r\n\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    <div style={{height:'50px'}}>\r\n    \r\n    {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{props.alert.type} </strong> {props.alert.message}\r\n   \r\n</div>}</div>\r\n  )\r\n}\r\n","\n\nimport { useState } from \"react\";\n\n// import Accordian from \"./components/Accordian\";\nimport Textform from \"./components/Textform\";\nimport Navbar from \"./components/Navbar\";\nimport Alert from \"./components/Alert\";\nimport React  from 'react';\n// import { BrowserRouter as Router, Route, Routes} from 'react-router-dom';\n\n\n// import Textform from \"./components/Textform\";  \n\nfunction App() {\n \n \n\n  const [mode, setmode] = useState(\"light\");\n  const [alert, setalert] = useState(\"null\");\n  \n  \n  const showAlert = (message, type)=>{\n    setalert({\n        message:message,\n        type:type\n    })\n  };\n  setTimeout(() => {\n    showAlert(null);\n  }, 3000);\n  \n\n  const enableDark = ()=> {\n    if(mode === 'light')\n    {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = '#363636';\n  \n\n      showAlert(\"you are Successfully Switched to dark mode\", \"success\");\n    }\n    else{\n      setmode(\"light\");\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"you are Successfully Switched to Light mode\", \"success\");\n    }\n\n  };\n  \n \n   \n  \n  return (\n   <>\n  \n   \n<Navbar title = \"TextAnalysis\" Home = \"Home\" mode = {mode} enableDark = {enableDark} Text = \"Go Dark\"  />\n<Alert alert = {alert}/>\n<Textform heading = \"Try TextAnalysis\" mode={mode} showAlert = {showAlert}/>\n \n\n   </>\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}